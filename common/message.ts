/**
 * messages
 * 
 * new line = \n
 */

// (本番用)
export const Messages = {
  STR_0001 : "ログインエラー",
  STR_0002 : "ログアウト",
  STR_0003 : "ご利用になれません",
  STR_0004 : "チャート画面を表示できません",
  STR_0005 : "注文画面を表示できません",
  STR_0006 : "決済注文画面を表示できません",
  STR_0007 : "スピード注文画面を表示できません",
  STR_0008 : "注文変更画面を表示できません",
  STR_0009 : "注文取消画面を表示できません",
  STR_0010 : "ロスカットレート変更画面を表示できません",
  STR_0011 : "デモ取引ではご利用いただけません",
  STR_0012 : "スピード注文エラー",
  STR_0013 : "アラート",
  STR_0014 : "注文完了",
  STR_0015 : "注文エラー",
  STR_0016 : (function(orderNo) {
    return "注文が完了しました。\n[注文番号]" + orderNo;
  }),
  STR_0017 : "当社PCホームページへ",

  ERR_0001 : (function(){
    if(process.env.NODE_ENV){
      if(process.env.NODE_ENV.indexOf("demo") >= 0 ){         // デモ用
        return "ただいま、システムが大変込み合っております。\n恐れ入りますが、しばらく経ってからアクセスしていただきますようお願い申し上げます。";
      }else{    // 本番用
        return "ただいま、システムが大変込み合っております。\n大変申し訳ありませんが、しばらくしてログインし直すか、当社コールセンターまでお問い合わせください。";
      }
    }
  })(),
  ERR_0002 : "インターネットに接続されていない、または接続先のサーバーに問題が発生しているため、接続できませんでした。",
  ERR_0003 : "ネットワークから切断されました。\n再接続中ですのでしばらくお待ちください。",
  ERR_0004 : "余力情報が取得できませんでした。",
  ERR_0005 : "インターネットに接続できませんでした。",
  ERR_0006 : "データが取得できませんでした。\nしばらくしてからもう一度お試しください。",
  ERR_0007 : "不正な操作です。",
  ERR_0008 : "ウォッチリストに追加できませんでした。",
  ERR_0009 : "ウォッチリストから削除できませんでした。",
  ERR_0010 : "ウォッチリストが更新できませんでした。",
  ERR_0011 : "振替が受け付けられなかった可能性があります。\n余力をご確認ください。",
  ERR_0012 : "注文が受け付けられなかった可能性があります。\n【約定履歴】にてご確認いただきますよう、よろしくお願い致します。",
  ERR_0013 : "一定時間操作がなかったか、セッションが無効になったため、ログアウトされました。",
  ERR_0014 : "チャートの取得に失敗しました。",
  ERR_0015 : "ネットワークから切断されました。\n再接続中ですのでしばらくお待ちください。",

  ERR_0017 : "セッションが無効です。\nログイン画面で再度ログインを行ってください。",
  ERR_0018 : "ユーザーIDは9桁の半角数字で入力してください。\n（ログイン名は6～42桁の半角英数字で入力してください。）",
  ERR_0019 : "パスワードは6～10桁の半角英数字を入力してください。",
  ERR_0020 : "はっちゅう君CFDの複数起動はできません。\nご利用状況をご確認ください。",
  ERR_0021 : (function(){
    if(process.env.NODE_ENV){
      if(process.env.NODE_ENV.indexOf("demo") >= 0 ){         // デモ用
        return "はっちゅう君CFDは一時的にご利用いただけません。";
      }else{    // 本番用
        return "はっちゅう君CFDは一時的にご利用いただけません。\nシステム稼動状況は当社PCホームページにてご確認ください。";
      }
    }
  })(),
  ERR_0022 : "",
  ERR_0023 : "プラチナチャートCFDはデモ取引ではご利用いただけません。\nプラチナチャートCFDにつきましては、こちらをご覧ください。",
  ERR_0024 : "対象の建玉はございません。",
  ERR_0025 : "対象の注文はございません。",
  ERR_0026 : "対象のお取引はございません。",
  ERR_0027 : "画面右上の{ウォッチリスト追加アイコン}から選択するか、ウォッチリスト以外のタブから銘柄名横の☆マークをクリックして、銘柄を追加してください。",
  ERR_0028 : "画面右上の☆マークから選択するか、ウォッチリスト以外のタブから銘柄名横の☆マークをクリックして、銘柄を追加してください。",
  ERR_0029 : "お知らせはございません。",
  ERR_0030 : "対象のニュースはございません。",
  ERR_0031 : "デモ口座ではニュースをご覧いただけません。\n口座開設いただくと、24時間随時更新のニュースがご利用いただけます。\n口座開設をご希望の方は、こちらよりお申し込みください。",
  ERR_0032 : "対象の指標・経済イベントはございません。",
  ERR_0033 : "取引数量を入力してください。",
  ERR_0034 : "取引数量は0より大きい値を入力してください。",
  ERR_0035 : "注文価格を入力してください。",
  ERR_0036 : "注文価格を正しく入力してください。",
  ERR_0037 : (function(boUnit) {
    return "注文価格は" + boUnit + "以上の値を入力してください。"
  }),
  ERR_0038 : "指値・逆指値を選択してください。",
  ERR_0039 : "有効期限を選択してください。",
  ERR_0040 : "注文価格を入力してください。",
  ERR_0041 : "注文価格を正しく入力してください。",
  ERR_0042 : "注文価格は｛呼値単位｝以上の値を入力してください。",
  ERR_0043 : "ただいま、システムが大変込み合っております。大変申し訳ありませんが、しばらくしてログインし直すか、当社コールセンターまでお問い合わせください。",
  ERR_0044 : "アラートの登録可能件数は最大10件です。",
  ERR_0045 : "アラートの登録可能件数は最大10件です。\nアラート設定の編集はこちらから",
  ERR_0046 : "【証券取引口座の振替可能時間】\n6:00～15:00、17:00～翌5:15\n※17:00以降の振替については翌営業日付の振替として計上いたしますが、余力への反映はリアルタイムで行います。",
  ERR_0047 : "デモ口座では企業情報をご覧いただけません。\n口座開設いただくと、企業情報がご利用いただけます。\n口座開設をご希望の方は、こちらよりお申し込みください。",
  ERR_0048 : "デモ口座ではファンド情報をご覧いただけません。\n口座開設いただくと、ファンド情報がご利用いただけます。\n口座開設をご希望の方は、こちらよりお申し込みください。",
  ERR_0049 : "振替が受け付けられなかった可能性があります。振替可能額をご確認ください。",
  ERR_0050 : "ロスカットレート変更が受け付けられなかった可能性があります。【建玉一覧】にてロスカットレートをご確認ください。",
  ERR_0051 : "注文が受け付けられなかった可能性があります。【約定履歴】をご確認ください。",
  ERR_0052 : "注文が受け付けられなかった可能性があります。【注文一覧】【約定履歴】をご確認ください。",
  ERR_0053 : "注文が受け付けられなかった可能性があります。【注文一覧】をご確認ください。",
  
  ERR_0054 : "チャート画面の最大表示数は6枚です。",
  ERR_0055 : "注文画面の最大表示数は8枚です。",
  ERR_0056 : "決済注文画面の最大表示数は8枚です。",
  ERR_0057 : "スピード注文画面の最大表示数は8枚です。",
  ERR_0058 : "注文変更画面の最大表示数は8枚です。",
  ERR_0059 : "注文取消画面の最大表示数は8枚です。",
  ERR_0060 : "ロスカットレート変更画面の最大表示数は8枚です。",

  

}

export function GetWarningMessage(clientInfoMessage:any):string {
	let messageWarning = "";
  for (let clientInfo of clientInfoMessage) {
    messageWarning += ('・' + clientInfo.message + '[' + clientInfo.messageCode + ']\n');
  }
  return messageWarning;
}
